---
format:
  dashboard:
    scrolling: true
---

# Scatter Plot Visualization {.center}

:::{.card title="Why Wastewater Monitoring?" .flow}

Typically, monitoring a community for pathogens has relied on individuals choosing (or having the opportunity) to test for particular pathogens. But for many pathogens, including SARS-CoV-2, infected individuals shed pathogen genetic material into wastewater, which can be sampled with relatively low effort. These samples can be analyzed not only for the presence or absence of pathogens, but also the abundance of that pathogen. They can also be used with genome sequencing technology to quantify the abundance of particular mutations. By comparing across sampling periods, this can indicate which mutations are on the rise and which are on the decline, and ultimately, forecast how the pathogen is evolving and whether that evolution should be of concern.

The plot below shows the results of analyses we run each week. These analyses use all SARS-CoV-2 sequences sampled from wastewater in [NCBI](https://www.ncbi.nlm.nih.gov/)'s [Sequence Read Archive](https://www.ncbi.nlm.nih.gov/sra)--see our Acknowledgements page for the contributors of these samples and statistics for on the data itself. The vertical and horizontal axes represent the abundance of mutations aggregated across a three-week period, with the more recent period on the vertical axis and the previous period on the horizontal axis.

:::



```{python}
import sys

from wastewater_dashboard.plot_variant_scatter import (
    parse_plotting_file,
    render_for_quarto,
    setup_logging,
)
from loguru import logger
from pathlib import Path

ALL_ORF_TSV = Path("./data/VariantPMsLong.tsv")
LINEAGE_JSON = Path("./data/major_lineages.json")

assert ALL_ORF_TSV.is_file(), f"The provided path, '{ALL_ORF_TSV}', does not exist."
assert LINEAGE_JSON.is_file(), f"The provided path, '{LINEAGE_JSON}', does not exist."

setup_logging(3)

# parse the file for each orf dataset into dataframes
orf_datasets = parse_plotting_file(ALL_ORF_TSV, LINEAGE_JSON)

# use the parsed dataframes wrapped in OrfDataset objects to render each plot, wrapping that in
# OrfDataset as well
for orf_dataset in orf_datasets:
    orf_dataset.sort_comparisons()
    orf_dataset.render_scatter_plot()
    assert orf_dataset.chart is not None

```

##

::: {.panel-tabset}

## Whole Genome

```{python}
render_for_quarto(orf_datasets, "Whole Genome")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF1ab

```{python}
render_for_quarto(orf_datasets, "ORF1")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## Spike

```{python}
render_for_quarto(orf_datasets, "S")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF3a

```{python}
render_for_quarto(orf_datasets, "ORF3a")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## E

```{python}
render_for_quarto(orf_datasets, "E")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## M

```{python}
render_for_quarto(orf_datasets, "M")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF6

```{python}
render_for_quarto(orf_datasets, "ORF6")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF7a

```{python}
render_for_quarto(orf_datasets, "ORF7a")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF7b

```{python}
render_for_quarto(orf_datasets, "ORF7b")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF8

```{python}
render_for_quarto(orf_datasets, "ORF8")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## N

```{python}
render_for_quarto(orf_datasets, "N")
```

:::{.card title="Notes on Interpretation" .flow}

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.


:::

## ORF10

```{python}
render_for_quarto(orf_datasets, "ORF10")
```

##### Technical Notes

Astute viewers may notice that many mutations relative to the standard [SARS-CoV-2 reference](https://www.ncbi.nlm.nih.gov/nuccore/1798174254) are omitted. This is because virtually every SARS-CoV-2 lineage that's currently circulating descends from the lineage [JN.1](https://cov-spectrum.org/explore/World/AllSamples/Past6M/variants?nextcladePangoLineage=JN.1*&). To remove noise from the plot, we omit JN.1-defining mutations so viewers can focus on mutations that are not yet fixed and may thus be informative for forecasting. This caveat aside, this visualization follows the convention of calling all mutations relative to the ancestral Wuhan-I strain of SARS-CoV-2. Note also that we filter mutations so that they are only displayed if they appear at or above a 2% frequency in either of the periods compared.

:::

##

:::{.card title="How do I interpret these visualizations? Start here!" .flow}

In general, the first points we look at in these plots are points that are closest to the upper lefthand corner of the plot, as these points represent amino acids that have very rapidly increased in frequency between the time-periods compared in our analyses. These mutations may be helpful for forecasting particular SARS-CoV-2 lineages that are likely to increase in prevalence. Given the function of the mutated amino acid, it may also indicate how the pathogen is mutating to evade pre-existing immunity or gain other functionality that is advantageous in the battle between pathogen versus host.

Next, we look at points that are closest to the lower righthand corner of the plot, as these mutations are likely to have become less fit, evolutionarily speaking, at a rapid rate.

From there, we click on mutations toward the upper righthand corner to see their trajectories; these mutations have very gradually increased in frequency. The closer they are to the corner, the closer they are to being present in nearly every SARS-CoV-2 wastewater sample.


:::

# Variant Data Browser

##

:::{.card title="Amino Acid Substitution Data" .flow}

This searchable table displays all plotted mutations. It shows the nucleotide positions where changes occur, along with their corresponding gene region and standardized mutation naming conventions.

:::


## Variant Metadata {height=800 scrolling="false"}

```{python}
import itables as it
import polars as pl

variant_data = pl.read_csv("./data/VariantPMsLong.tsv", separator="\t")
it.init_notebook_mode(all_interactive=True)
it.show(variant_data, column_filters="header", classes="display compact cell-border")
```

# Project Metadata Browser

##

:::{.card title="Wastewater Monitoring Project Metadata" .flow}

Metadata file available for all recently reviewed submissions available <a href="data/weeks_meta.tsv" download="weeks_meta.tsv">here</a>.

:::

## Project Metadata {height=800 scrolling="false"}

```{python}
project_data = pl.read_csv("./data/found_meta.tsv", separator="\t", has_header=True, null_values=["NA", ">", "<"], schema_overrides={"Population":pl.Utf8})
project_data = project_data.with_columns(
    pl.col("Population").fill_null("N/A")
)
it.init_notebook_mode(all_interactive=True)
it.show(project_data, column_filters="header", classes="display compact cell-border")
```
