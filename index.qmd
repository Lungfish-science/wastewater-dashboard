---
format:
  dashboard:
    scrolling: true 
---

:::{.card title="About Wastewater Monitoring" .flow}

Monitoring wastewater for viruses allows observation of viral dynamics over large populations with relatively small effort, and especially with reduced clinical testing, a more accurate view of broad trends.  We download samples with SARS-CoV-2 sequences amplified from wastewater from NCBI's Sequence Read Archive (SRA).  From the samples, we track polymorphisms of SARS-CoV-2 and their abundances, comparing the most recent two consecutive three-week periods for which samples are available.  As JN.1 is the progenitor of most currently circulating strains, polymorphisms defining JN.1 were excluded from further analysis.  Metadata on the samples included in each analysis is provided, a small number of samples are excluded that have known complexities that could distort results.  Polymorphisms that appeared above a 2% threshold in either three-week period are displayed in a scatter plot.  Changes in abundance of polymorphisms allow us to track the circulation dynamics of their associated strains and observe the appearance of novel strains or polymorphisms.  Changes are denoted relative to the ancestral Wuhan-I strain. 

:::

```{python}
import sys

from wastewater_dashboard.plot_variant_scatter import (
    collect_orf_data,
    parse_plotting_file,
    render_scatter_plot,
)
from pathlib import Path
```

##

::: {.panel-tabset}

## ORF1ab

```{python}
ORF_TSV = "data/ORF1.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## Spike

```{python}
ORF_TSV = "data/S.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## ORF3a

```{python}
ORF_TSV = "data/ORF3a.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## E

```{python}
ORF_TSV = "data/E.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart.show()
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart.show()
```

## M

```{python}
ORF_TSV = "data/M.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart.show()
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart.show()
```

## ORF6

```{python}
ORF_TSV = "data/ORF6.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart.show()
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart.show()
```

## ORF7a

```{python}
ORF_TSV  = "data/ORF7a.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## ORF7b

```{python}
ORF_TSV  = "data/ORF7b.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## ORF8

```{python}
ORF_TSV  = "data/ORF8.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## N

```{python}
ORF_TSV  = "data/N.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

## ORF10

```{python}
ORF_TSV  = "data/ORF10.plot.tsv.gz"

if Path(ORF_TSV).is_file():
  orf_dataset = collect_orf_data(ORF_TSV)
  with_dfs = parse_plotting_file(orf_dataset)
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
else:
  orf_dataset = collect_orf_data("data/ORF1.plot.tsv.gz")
  with_dfs = parse_plotting_file(orf_dataset)
  with_dfs.df = with_dfs.df.iloc[0:0]
  final_dataset = render_scatter_plot(with_dfs)

  final_dataset.chart
```

:::
